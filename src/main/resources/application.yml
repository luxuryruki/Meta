server:
  port: 8001


debug: false # 디버그 모드 비활성화

management: # 관리 엔드포인트 설정
  endpoint:
  endpoints:
    web:
      exposure:
        include: "*" # 모든 관리 엔드포인트를 웹에 노출

logging: # 로깅 설정
  level:
    com.fastcampus.board: debug # com.fastcampus.board 패키지의 로그 레벨을 debug로 설정
    org.springframework.web.servlet: debug # Spring MVC의 로그 레벨을 debug로 설정
    org.hibernate.type.descriptor.sql.BasicBinder: trace # Hibernate SQL 바인딩 로그 레벨을 trace로 설정

spring:
  datasource: # 데이터 소스 설정
    url: jdbc:h2:mem:board # H2 메모리 데이터베이스 URL
    username: sa # H2 기본 사용자 이름
    password: # H2 기본 비밀번호 (빈 값)
    driver-class-name: org.h2.Driver # H2 JDBC 드라이버 클래스 이름
  jpa: # JPA 설정
    defer-datasource-initialization: true # 데이터 소스 초기화를 지연
    hibernate:
      ddl-auto: create # 데이터베이스 스키마를 애플리케이션 시작 시 생성
    show-sql: true # 실행되는 SQL 쿼리를 출력
    properties:
      hibernate:
        format_sql: true # 출력되는 SQL을 포맷팅
        default_batch_fetch_size: 100 # 기본 배치 페치 크기 설정
  sql:
    init:
      mode: always # 항상 SQL 초기화 모드를 사용
  data:
    rest:
      base-path: /api # 기본 REST API 경로 설정
      detection-strategy: annotated # API로 노출할 리포지토리 감지 전략
      # 선택 가능한 값: default(기본값 - 공개 리포지토리), annotated(어노테이션이 지정된 리포지토리만), all(모든 리포지토리), visibility(공개 리포지토리만)


meta:
  facebook:
    graph-url-prefix: https://graph.facebook.com/v18.0